package prototipus;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Pipe.java
//  @ Date : 4/22/2023
//  @ Author : 
//
//




public class Pipe extends Component {
	
	public Pipe(int capacity) {
		pumpPlaceable = true;
		node = false;
		itemSource = false;
		broken = false;
		leaks = false;
		this.capacity = capacity;
	}
	
	public Pipe() {
		pumpPlaceable = true;
		node = false;
		itemSource = false;
		broken = false;
		leaks = false;
		this.capacity = 10;
	}
	
	public void repaired() {
		setLeaks(false);
		resetPunctureCounter();
	}
	
	public void malfunction() {
	}
	
	public void punctured() {
		setLeaks(true);
	}

	public void update(){
		if(this.hasOutputComponent()){
			if(!leaks) {
				output.addWater();
				takeWater();
			}
			else {
				if(this.isFull()) {
					leakedWater++;
					takeWater();
				}
			}
		}
		else {
			if(this.isFull()) {
				leakedWater++;
				takeWater();
			}
		}
	}
	
	public void update() {
		if(!leaks)
			waterFlows();
		else if(waterLevel > 0)
		{
			waterLevel --;
			leakedWater ++;
		}
		if(this.hasOutputComponent()){
			if(!leaks) {
				output.addWater();
				takeWater();
			}
			else {
				if(this.isFull()) {
					leakedWater++;
					takeWater();
				}
			}
		}
		else {
			if(this.isFull()) {
				leakedWater++;
				takeWater();
			}
		}
		decreaseSlipperyCounter();
		decreaseStickyCounter();
		decreasePunctureCounter();
	}
	
	public void decreaseSlipperyCounter() {
		if(slipperyCounter > 0)
			slipperyCounter --;
	}
	
	public void decreaseStickyCounter() {
		if(stickyCounter > 0)
			stickyCounter --;
	}
	
	public void decreasePunctureCounter() {
		if(punctureCounter > 0)
			punctureCounter --;
	}
	
	public void setLeaks(boolean value) {
		leaks = value;
	}
	
	public String toString() {
		return "leaked water: " + leakedWater + ", " + super.toString() + System.lineSeparator();
	}
}
